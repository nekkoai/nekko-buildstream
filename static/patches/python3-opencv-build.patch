diff --git a/_build_backend/backend.py b/_build_backend/backend.py
index 7fc8413..a91d3ac 100644
--- a/_build_backend/backend.py
+++ b/_build_backend/backend.py
@@ -10,14 +10,5 @@ def get_requires_for_build_wheel(config_settings=None):
     from skbuild.exceptions import SKBuildError
     from skbuild.cmaker import get_cmake_version
     packages = _orig.get_requires_for_build_wheel(config_settings)
-    # check if system cmake can be used if present
-    # if not, append cmake PyPI distribution to required packages
-    # scikit-build>=0.18 itself requires cmake 3.5+
-    min_version = "3.5"
-    try:
-        if version.parse(get_cmake_version().split("-")[0]) < version.parse(min_version):
-            packages.append(f'cmake>={min_version}')
-    except SKBuildError:
-        packages.append(f'cmake>={min_version}')
 
     return packages
diff --git a/pyproject.toml b/pyproject.toml
index 58fba21..62fd241 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -2,12 +2,12 @@
 requires = [
   "numpy<2.0; python_version<'3.9'",
   "numpy==2.0.2; python_version>='3.9' and python_version<'3.13'",
-  "numpy==2.1.3; python_version=='3.13'",
+  "numpy>=2.1.3; python_version=='3.13'",
   "packaging",
   "pip",
   "scikit-build>=0.14.0",
   "setuptools==59.2.0; python_version<'3.12'",
-  "setuptools<70.0.0; python_version>='3.12'",
+  "setuptools<=81.0.0; python_version>='3.12'",
 ]
 # use a custom backend to manage CMake check / installation
 # see https://scikit-build.readthedocs.io/en/latest/usage.html#adding-cmake-as-building-requirement-only-if-not-installed-or-too-low-a-version
