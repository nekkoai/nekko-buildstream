diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7644589f..0badc849 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -100,9 +100,11 @@ else()
 endif()
 
 target_include_directories(onnxruntime-genai PRIVATE ${ORT_HEADER_DIR})
-target_include_directories(onnxruntime-genai PRIVATE ${onnxruntime_extensions_SOURCE_DIR}/shared/api)
-target_link_libraries(onnxruntime-genai PRIVATE onnxruntime_extensions)
+target_include_directories(onnxruntime-genai PRIVATE ${ORTX_HEADER_DIR})
+target_link_directories(onnxruntime-genai PRIVATE ${ORTX_LIB_DIR})
 target_link_directories(onnxruntime-genai PRIVATE ${ORT_LIB_DIR})
+message(STATUS "Linking - ${EXTERNAL_LIBRARIES}")
+target_link_libraries(onnxruntime-genai PRIVATE ${EXTERNAL_LIBRARIES})
 target_link_libraries(onnxruntime-genai PRIVATE Threads::Threads)
 
 # The genai library itself is always embedded in the shared library
diff --git a/cmake/external/onnxruntime_external_deps.cmake b/cmake/external/onnxruntime_external_deps.cmake
index aeb561c1..4f2a30cf 100644
--- a/cmake/external/onnxruntime_external_deps.cmake
+++ b/cmake/external/onnxruntime_external_deps.cmake
@@ -80,19 +80,27 @@ if(USE_DML)
 endif()
 
 
-FetchContent_Declare(
-  onnxruntime_extensions
-  GIT_REPOSITORY ${DEP_URL_onnxruntime_extensions}
-  GIT_TAG ${DEP_SHA1_onnxruntime_extensions}
-)
-set(OCOS_BUILD_PRESET ort_genai)
-onnxruntime_fetchcontent_makeavailable(onnxruntime_extensions)
-
-list(APPEND EXTERNAL_LIBRARIES
-  onnxruntime_extensions
-  ocos_operators
-  noexcep_operators
-)
+if(ORTX_HOME)
+  # If ORTX_HOME is specified at build time, use ORTX_HOME to get the onnxruntime-extensions headers and libraries
+  message(STATUS "Using ONNX Runtime Extensions from ${ORTX_HOME}")
+
+  set(ORTX_HEADER_DIR ${ORTX_HOME}/include/onnxruntime-extensions)
+  set(ORTX_LIB_DIR ${ORTX_HOME}/lib)
+  list(APPEND EXTERNAL_LIBRARIES
+    ortextensions
+    ortcustomops
+    ocos_operators
+    noexcep_operators
+  )
+else()
+  set(ORTX_HEADER_DIR "${onnxruntime_extensions_SOURCE_DIR}/shared/api")
+  set(ORTX_LIB_DIR "")
+  list(APPEND EXTERNAL_LIBRARIES
+    onnxruntime_extensions
+    ocos_operators
+    noexcep_operators
+  )
+endif()
 
 if(USE_GUIDANCE)
   FetchContent_Declare(
@@ -108,4 +116,4 @@ if(USE_GUIDANCE)
   )
   onnxruntime_fetchcontent_makeavailable(llguidance)
   corrosion_import_crate(MANIFEST_PATH ${llguidance_SOURCE_DIR}/parser/Cargo.toml)
-endif()
\ No newline at end of file
+endif()
diff --git a/cmake/ortlib.cmake b/cmake/ortlib.cmake
index 78fff871..a364ed2e 100644
--- a/cmake/ortlib.cmake
+++ b/cmake/ortlib.cmake
@@ -16,7 +16,7 @@ if(ORT_HOME)
     set(ORT_HEADER_DIR ${ORT_HOME}/include/onnxruntime)
     set(ORT_LIB_DIR ${ORT_HOME}/lib)
   else()
-    set(ORT_HEADER_DIR ${ORT_HOME}/include)
+    set(ORT_HEADER_DIR ${ORT_HOME}/include/onnxruntime)
     set(ORT_LIB_DIR ${ORT_HOME}/lib)
   endif()
 else()
diff --git a/src/python/CMakeLists.txt b/src/python/CMakeLists.txt
index 9c279fbb..d0f17493 100644
--- a/src/python/CMakeLists.txt
+++ b/src/python/CMakeLists.txt
@@ -6,9 +6,9 @@ file(GLOB python_srcs CONFIGURE_DEPENDS
 )
 find_package(Python COMPONENTS Interpreter Development)
 pybind11_add_module(python ${python_srcs})
-target_include_directories(python PRIVATE ${ORT_HEADER_DIR})
-target_link_directories(python PRIVATE ${ORT_LIB_DIR})
-target_link_libraries(python PRIVATE onnxruntime-genai)
+target_include_directories(python PRIVATE ${ORT_HEADER_DIR} ${ORTX_HEADER_DIR} ${Python_INCLUDE_DIRS})
+target_link_directories(python PRIVATE ${ORT_LIB_DIR} ${ORTX_LIB_DIR})
+target_link_libraries(python PRIVATE onnxruntime-genai ${Python_LIBRARIES})
 
 if(NOT (CMAKE_SYSTEM_NAME STREQUAL "Android" OR CMAKE_SYSTEM_NAME STREQUAL "Linux" OR CMAKE_SYSTEM_NAME STREQUAL "Darwin"))
   target_link_libraries(python PRIVATE ${ONNXRUNTIME_LIB})
@@ -113,4 +113,4 @@ if(BUILD_WHEEL)
       EXCLUDE_FROM_ALL
     )
   endif()
-endif()
\ No newline at end of file
+endif()
